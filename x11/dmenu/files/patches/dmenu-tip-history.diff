diff -r 23bd778df432 dmenu.1
--- a/dmenu.1	Fri Aug 20 19:57:13 2010 +0100
+++ b/dmenu.1	Sat Aug 28 18:34:49 2010 +0100
@@ -19,6 +19,8 @@
 .IR color ]
 .RB [ \-sf
 .IR color ]
+.RB [ \-hist
+.IR "<filename>" ]
 .RB [ \-v ]
 .P
 .BR dmenu_run " ..."
@@ -72,6 +74,9 @@
 .BI \-sf " color"
 defines the selected foreground color.
 .TP
+.BI \-hist " <histfile>"
+the file to use for history
+.TP
 .B \-v
 prints version information to standard output, then exits.
 .SH USAGE
diff -r 23bd778df432 dmenu.c
--- a/dmenu.c	Fri Aug 20 19:57:13 2010 +0100
+++ b/dmenu.c	Sat Aug 28 18:34:49 2010 +0100
@@ -16,6 +16,8 @@
 #define MIN(a,b)                ((a) < (b) ? (a) : (b))
 #define MAX(a,b)                ((a) > (b) ? (a) : (b))
 
+#define HIST_SIZE 20
+
 typedef struct Item Item;
 struct Item {
 	char *text;
@@ -33,7 +35,7 @@
 static void match(void);
 static size_t nextrune(int incr);
 static void paste(void);
-static void readstdin(void);
+static void readitems(void);
 static void run(void);
 static void setup(void);
 static void usage(void);
@@ -60,8 +62,37 @@
 static Item *prev, *curr, *next;
 static Window root, win;
 
+static char hist[HIST_SIZE][1024];
+static char *histfile = NULL;
+static int hcnt = 0;
+
 static int (*fstrncmp)(const char *, const char *, size_t) = strncmp;
 
+static int
+writehistory(char *command) {
+	int i = 0;
+	FILE *f;
+
+	if(!histfile || strlen(command) <= 0)
+		return 0;
+
+	if((f = fopen(histfile, "w"))) {
+		fputs(command, f);
+		fputc('\n', f);
+		for(; i < hcnt; i++) {
+			if(strcmp(command, hist[i]) != 0) {
+				fputs(hist[i], f);
+				fputc('\n', f);
+			}
+		}
+		fclose(f);
+		return 1;
+	}
+
+	return 0;
+}
+
+
 void
 appenditem(Item *item, Item **list, Item **last) {
 	if(!*last)
@@ -296,6 +327,7 @@
 	case XK_KP_Enter:
 		fputs((sel && !(ev->state & ShiftMask)) ? sel->text : text, stdout);
 		fflush(stdout);
+		writehistory( (sel == NULL) ? text : sel->text);
 		exit(EXIT_SUCCESS);
 	case XK_Right:
 		if(cursor < len) {
@@ -385,9 +417,10 @@
 }
 
 void
-readstdin(void) {
+readitems(void) {
 	char buf[sizeof text], *p;
 	Item *item, **end;
+	FILE *f;
 
 	for(end = &items; fgets(buf, sizeof buf, stdin); *end = item, end = &item->next) {
 		if((p = strchr(buf, '\n')))
@@ -399,6 +432,22 @@
 		item->next = item->left = item->right = NULL;
 		inputw = MAX(inputw, dc_textw(dc, item->text));
 	}
+
+	if(histfile && (f = fopen(histfile, "r"))) {
+		for(; fgets(buf, sizeof buf, f); *end = item, end = &item->next) {
+			if((p = strchr(buf, '\n')))
+				*p = '\0';
+			if(!(item = malloc(sizeof *item)))
+				eprintf("cannot malloc %u bytes\n", sizeof *item);
+			if(!(item->text = strdup(buf)))
+				eprintf("cannot strdup %u bytes\n", strlen(buf)+1);
+			item->next = item->left = item->right = NULL;
+			inputw = MAX(inputw, dc_textw(dc, item->text));
+
+			strncpy(hist[hcnt++], buf, (strlen(buf) <= 1024) ? strlen(buf): 1024 );
+		}
+		fclose(f);
+	}
 }
 
 void
@@ -490,7 +539,7 @@
 void
 usage(void) {
 	fputs("usage: dmenu [-b] [-i] [-l lines] [-p prompt] [-fn font] [-nb color]\n"
-	      "             [-nf color] [-sb color] [-sf color] [-v]\n", stderr);
+	      "             [-nf color] [-sb color] [-sf color] [-hist histfile] [-v]\n", stderr);
 	exit(EXIT_FAILURE);
 }
 
@@ -526,12 +575,14 @@
 			selbgcolor = argv[++i];
 		else if(!strcmp(argv[i], "-sf"))
 			selfgcolor = argv[++i];
+		else if(!strcmp(argv[i], "-hist"))
+			histfile = argv[++i];
 		else
 			usage();
 
 	dc = dc_init();
 	dc_font(dc, font);
-	readstdin();
+	readitems();
 	setup();
 	run();
 
